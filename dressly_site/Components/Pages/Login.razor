@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject HttpClient Http

<h1 style="text-align:center;">Login</h1>

<div class="container" style="max-width: 400px; margin-top: 20px;">
    <EditForm Model="@loginRequest" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email" style="text-align: right; display: block;">:אימייל</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="loginRequest.Email" required />
        </div>

        <div class="form-group">
            <label for="PasswordHash" style="text-align: right; display: block;">:סיסמה</label>
            <InputText id="PasswordHash" type="PasswordHash" class="form-control" @bind-Value="loginRequest.PasswordHash" required />
        </div>

        <div class="form-group" style="margin-top: 20px;">
            <button type="submit" class="btn btn-lg" style="background-color: #ff69b4; border: none; font-size: 1.25em; font-weight: bold; width: 100%; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); transform: translateY(0); transition: transform 0.2s ease;">
                התחבר
            </button>
        </div>
    </EditForm>

    <div style="margin-top: 10px; text-align: center;">
        <p>אין לך חשבון? <a href="/signup">הירשם כאן</a></p>
    </div>
</div>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private string Message;

    private async Task HandleValidSubmit()
    {
        Console.WriteLine("HandleValidSubmit triggered");
        try
        {
            // שליחת בקשה ל-API
            var response = await Http.GetAsync($"api/User/ValidateLogin?email={loginRequest.Email}&password={loginRequest.PasswordHash}");

            if (response.IsSuccessStatusCode)
            {
                var isValid = await response.Content.ReadFromJsonAsync<bool>();

                if (isValid)
                {
                    Navigation.NavigateTo("/home");
                }
                else
                {
                    Message = "Invalid credentials. Please try again.";
                }
            }
            else
            {
                Message = "Failed to connect to the server.";
            }
        }
        catch (Exception ex)
        {
            Message = $"An error occurred: {ex.Message}";
        }
    }

    public class LoginRequest
    {
        public string Email { get; set; }
        public string PasswordHash { get; set; }
    }
}
